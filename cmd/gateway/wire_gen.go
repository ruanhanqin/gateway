// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/Naist4869/gateway/internal/biz"
	"github.com/Naist4869/gateway/internal/conf"
	"github.com/Naist4869/gateway/internal/data"
	"github.com/Naist4869/gateway/internal/server"
	"github.com/Naist4869/gateway/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

func initApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, error) {
	httpServer := server.NewHTTPServer(confServer)
	grpcServer := server.NewGRPCServer(confServer)
	dataData, err := data.NewData(confData)
	if err != nil {
		return nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	payGatewayService := service.NewPayGatewayService(greeterUsecase, logger)
	app := newApp(logger, httpServer, grpcServer, payGatewayService)
	return app, nil
}
